{
  "Regions": {
    "ap-northeast-1": {
      "Partition": "aws",
      "Locality": "Tokyo",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "ap-northeast-1a"
        },
        "c": {
          "Title": "Zone C",
          "Name": "c",
          "Description": "Zone C",
          "AWSZone": "ap-northeast-1c"
        }
      },
      "Accounts": {
        "ELB": "582318560864"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-00d29e4cb217ae06b",
          "EC2": "ami-00a5245b4816c38e6",
          "ECS": "ami-04b084b13eedc8061"
        }
      }
    },
    "ap-northeast-2": {
      "Partition": "aws",
      "Locality": "Seoul",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "ap-northeast-2a"
        },
        "c": {
          "Title": "Zone C",
          "Name": "c",
          "Description": "Zone C",
          "AWSZone": "ap-northeast-2c"
        }
      },
      "Accounts": {
        "ELB": "600734575887"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-0d98591cbf9ef1ffd",
          "EC2": "ami-00dc207f8ba6dc919",
          "ECS": "ami-08733cca39f256fc0"
        }
      }
    },
    "ap-south-1": {
      "Partition": "aws",
      "Locality": "Mumbai",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "ap-south-1a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "ap-south-1b"
        }
      },
      "Accounts": {
        "ELB": "718504428378"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-00b3aa8a93dd09c13",
          "EC2": "ami-0ad42f4f66f6c1cc9",
          "ECS": "ami-0c6c683094db433fe"
        }
      }
    },
    "ap-southeast-1": {
      "Partition": "aws",
      "Locality": "Singapore",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "Index": 0,
          "AWSZone": "ap-southeast-1a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Singapore Zone B",
          "Index": 1,
          "AWSZone": "ap-southeast-1b"
        }
      },
      "Accounts": {
        "ELB": "114774131450"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-01514bb1776d5c018",
          "EC2": "ami-05b3bcf7f311194b3",
          "ECS": "ami-0b62a2301e9954559"
        }
      }
    },
    "ap-southeast-2": {
      "Partition": "aws",
      "Locality": "Sydney",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "ap-southeast-2a",
          "NetworkEndpoints" : [
              {
                  "Type": "Interface",
                  "ServiceName": "aws.sagemaker.ap-southeast-2.notebook"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.cloudformation"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.cloudtrail"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.codebuild"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.codepipeline"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.config"
              },
              {
                  "Type": "Gateway",
                  "ServiceName": "com.amazonaws.ap-southeast-2.dynamodb"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.ec2"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.ec2messages"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.ecr.api"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.ecr.dkr"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.ecs"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.ecs-agent"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.ecs-telemetry"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.elasticloadbalancing"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.events"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.execute-api"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.kinesis-streams"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.kms"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.logs"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.monitoring"
              },
              {
                  "Type": "Gateway",
                  "ServiceName": "com.amazonaws.ap-southeast-2.s3"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.sagemaker.api"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.sagemaker.runtime"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.secretsmanager"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.servicecatalog"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.sns"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.sqs"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.ssm"
              },
              {
                  "Type": "Interface",
                  "ServiceName": "com.amazonaws.ap-southeast-2.ssmmessages"
              }
            ]
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "ap-southeast-2b",
          "NetworkEndpoints" : [
            {
                "ServiceName": "aws.sagemaker.ap-southeast-2.notebook",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.cloudformation",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.cloudtrail",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.codebuild",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.codepipeline",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.config",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.dynamodb",
                "Type": "Gateway"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.ec2",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.ec2messages",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.ecr.api",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.ecr.dkr",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.ecs",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.ecs-agent",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.ecs-telemetry",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.elasticloadbalancing",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.events",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.execute-api",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.kinesis-streams",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.kms",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.logs",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.monitoring",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.s3",
                "Type": "Gateway"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.sagemaker.api",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.sagemaker.runtime",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.secretsmanager",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.servicecatalog",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.sns",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.sqs",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.ssm",
                "Type": "Interface"
            },
            {
                "ServiceName": "com.amazonaws.ap-southeast-2.ssmmessages",
                "Type": "Interface"
            }
          ]
        },
        "c": {
          "Title": "Zone C",
          "Name": "c",
          "Description": "Zone C",
          "AWSZone": "ap-southeast-2c",
          "NetworkEndpoints" : [
            {
                "Type": "Interface",
                "ServiceName": "aws.sagemaker.ap-southeast-2.notebook"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.cloudformation"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.cloudtrail"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.codebuild"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.codepipeline"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.config"
            },
            {
                "Type": "Gateway",
                "ServiceName": "com.amazonaws.ap-southeast-2.dynamodb"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.ec2"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.ec2messages"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.ecr.api"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.ecr.dkr"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.ecs"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.ecs-agent"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.ecs-telemetry"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.elasticloadbalancing"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.events"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.execute-api"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.kinesis-streams"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.kms"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.logs"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.monitoring"
            },
            {
                "Type": "Gateway",
                "ServiceName": "com.amazonaws.ap-southeast-2.s3"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.sagemaker.api"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.sagemaker.runtime"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.secretsmanager"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.servicecatalog"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.sns"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.sqs"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.ssm"
            },
            {
                "Type": "Interface",
                "ServiceName": "com.amazonaws.ap-southeast-2.ssmmessages"
            }
          ]
        }
      },
      "Accounts": {
        "ELB": "783225319266"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-062c04ec46aecd204",
          "EC2": "ami-02fd0b06f06d93dfc",
          "ECS": "ami-00f815702af6b8889"
        }
      }
    },
    "ca-central-1": {
      "Partition": "aws",
      "Locality": "Central",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "ca-central-1a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "ca-central-1b"
        }
      },
      "Accounts": {
        "ELB": "985666609251"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-0b32354309da5bba5",
          "EC2": "ami-07423fb63ea0a0930",
          "ECS": "ami-03c73af2712f26819"
        }
      }
    },
    "cn-north-1": {
      "Partition": "aws",
      "Locality": "Beijing",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "cn-north-1a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "cn-north-1b"
        }
      },
      "Accounts": {
        "ELB": "638102146993"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-0f944362",
          "EC2": "ami-dadb09b7"
        }
      }
    },
    "eu-central-1": {
      "Partition": "aws",
      "Locality": "Frankfurt",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "eu-central-1a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "eu-central-1b"
        }
      },
      "Accounts": {
        "ELB": "054676820928"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-06a5303d47fbd8c60",
          "EC2": "ami-0cfbf4f6db41068ac",
          "ECS": "ami-08f05e21d1b86879f"
        }
      }
    },
    "eu-west-1": {
      "Partition": "aws",
      "Locality": "Ireland",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "eu-west-1a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "eu-west-1b"
        },
        "c": {
          "Title": "Zone C",
          "Name": "c",
          "Description": "Zone C",
          "AWSZone": "eu-west-1c"
        }
      },
      "Accounts": {
        "ELB": "156460612806"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-024107e3e3217a248",
          "EC2": "ami-08935252a36e25f85",
          "ECS": "ami-0de29b072b458b107"
        }
      }
    },
    "eu-west-2": {
      "Partition": "aws",
      "Locality": "London",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "eu-west-2a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "eu-west-2b"
        }
      },
      "Accounts": {
        "ELB": "652711504416"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-0ca65a55561666293",
          "EC2": "ami-01419b804382064e4",
          "ECS": "ami-0e4266b1932fa97c8"
        }
      }
    },
    "eu-west-3": {
      "Partition": "aws",
      "Locality": "Paris",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "eu-west-3a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "eu-west-3b"
        }
      },
      "Accounts": {
        "ELB": "009996457667"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-0641e4dfc1427f114",
          "EC2": "ami-0dd7e7ed60da8fb83",
          "ECS": "ami-0ca148151641c602a"
        }
      }
    },
    "sa-east-1": {
      "Partition": "aws",
      "Locality": "Sao Paulo",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "sa-east-1a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "sa-east-1b"
        },
        "c": {
          "Title": "Zone C",
          "Name": "c",
          "Description": "Zone C",
          "AWSZone": "sa-east-1c"
        }
      },
      "Accounts": {
        "ELB": "507241528517"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-057f5d52ff7ae75ae",
          "EC2": "ami-05145e0b28ad8e0b2",
          "ECS": "ami-0d32ccfc47c154080"
        }
      }
    },
    "us-east-1": {
      "Partition": "aws",
      "Locality": "North Virginia",
      "Zones": {
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "us-east-1b"
        },
        "c": {
          "Title": "Zone C",
          "Name": "c",
          "Description": "Zone C",
          "AWSZone": "us-east-1c"
        },
        "d": {
          "Title": "Zone D",
          "Name": "d",
          "Description": "Zone D",
          "AWSZone": "us-east-1d"
        },
        "e": {
          "Title": "Zone E",
          "Name": "e",
          "Description": "Zone E",
          "AWSZone": "us-east-1e"
        }
      },
      "Accounts": {
        "ELB": "127311923021"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-00a9d4a05375b2763",
          "EC2": "ami-0080e4c5bc078760e",
          "ECS": "ami-06bec82fb46167b4f"
        }
      }
    },
    "us-east-2": {
      "Partition": "aws",
      "Locality": "Ohio",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "us-east-2a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "us-east-2b"
        },
        "c": {
          "Title": "Zone C",
          "Name": "c",
          "Description": "Zone C",
          "AWSZone": "us-east-2c"
        }
      },
      "Accounts": {
        "ELB": "033677994240"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-00d1f8201864cc10c",
          "EC2": "ami-0cd3dfa4e37921605",
          "ECS": "ami-0b31574e5d83d5c42"
        }
      }
    },
    "us-gov-west-1": {
      "Partition": "aws-us-gov",
      "Locality": "US",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "us-gov-west-1a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "us-gov-west-1b"
        }
      },
      "Accounts": {
        "ELB": "048591011584"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-66a01b07",
          "EC2": "ami-ffa61d9e"
        }
      }
    },
    "us-west-1": {
      "Partition": "aws",
      "Locality": "North California",
      "Zones": {
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "us-west-1b"
        },
        "c": {
          "Title": "Zone C",
          "Name": "c",
          "Description": "Zone C",
          "AWSZone": "us-west-1c"
        }
      },
      "Accounts": {
        "ELB": "027434742980"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-097ad469381034fa2",
          "EC2": "ami-0ec6517f6edbf8044",
          "ECS": "ami-03a86880c9c6880ac"
        }
      }
    },
    "us-west-2": {
      "Partition": "aws",
      "Locality": "Oregon",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "us-west-2a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "us-west-2b"
        },
        "c": {
          "Title": "Zone C",
          "Name": "c",
          "Description": "Zone C",
          "AWSZone": "us-west-2c"
        }
      },
      "Accounts": {
        "ELB": "797873946194"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-0b840e8a1ce4cdf15",
          "EC2": "ami-01e24be29428c15b2",
          "ECS": "ami-0b2cc421c0d3015b4"
        }
      }
    },
    "eu-north-1": {
      "Partition": "aws",
      "Locality": "Stockholm",
      "Zones": {
        "a": {
          "Title": "Zone A",
          "Name": "a",
          "Description": "Zone A",
          "AWSZone": "eu-north-1a"
        },
        "b": {
          "Title": "Zone B",
          "Name": "b",
          "Description": "Zone B",
          "AWSZone": "eu-north-1b"
        },
        "c": {
          "Title": "Zone C",
          "Name": "c",
          "Description": "Zone C",
          "AWSZone": "eu-north-1c"
        }
      },
      "Accounts": {
        "ELB": "897822967062"
      },
      "AMIs": {
        "Centos": {
          "NAT": "ami-28d15f56",
          "EC2": "ami-86fe70f8",
          "ECS": "ami-01821d990572e458a"
        }
      }
    }
  },
  "Environments": {
    "alm": {
      "Title": "Application Lifecycle Management Environment",
      "Description": "Normally only one environment for the alm. Entry mainly here for naming consistency",
      "Category": "alm",
      "Operations": {
        "Expiration": 90,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 7
        }
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    },
    "shared": {
      "Title": "Shared Services Environment",
      "Description": "One shared environment per account. Entry mainly here for naming consistency",
      "Category": "alm",
      "Operations": {
        "Expiration": 30
      }
    },
    "dev": {
      "Title": "Development Environment",
      "Name": "development",
      "Description": "Potentially holds individual dev servers for multiple devs",
      "Category": "dev",
      "Operations": {
        "Expiration": 14
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    },
    "alpha": {
      "Title": "Alpha Environment",
      "Description": "Prototyping environment according to DTO classification",
      "Category": "test",
      "Operations": {
        "Expiration": 14,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 2
        }
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    },
    "beta": {
      "Title": "Beta Environment",
      "Description": "Preproduction environment according to DTO classification",
      "Category": "stg",
      "MultiAZ": true,
      "Operations": {
        "Expiration": 90,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 7
        }
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    },
    "int": {
      "Title": "Integration Environment",
      "Name": "integration",
      "Description": "Mainly for devs to confirm components work together",
      "Category": "test",
      "Operations": {
        "Expiration": 30,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 7
        }
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    },
    "aat": {
      "Title": "Automated Acceptance Environment",
      "Name": "automatedacceptance",
      "Description": "Execution of automated tests",
      "Category": "test",
      "Operations": {
        "Expiration": 30,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 7
        }
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    },
    "uat": {
      "Title": "User Acceptance Environment",
      "Name": "useracceptance",
      "Description": "Manual customer testing",
      "Category": "test",
      "Operations": {
        "Expiration": 30,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 7
        }
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    },
    "system": {
      "Title": "System Test Environment",
      "Name": "system",
      "Description": "Same as UAT",
      "Category": "test",
      "MultiAZ": true,
      "Operations": {
        "Expiration": 30,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 7
        }
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    },
    "preprod": {
      "Title": "Preproduction Environment",
      "Name": "preproduction",
      "Description": "Deployment, performance, volume testing",
      "Category": "stg",
      "MultiAZ": true,
      "Operations": {
        "Expiration": 90,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 7
        },
        "DeadLetterQueue": {
          "MaxReceives": 13
        }
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    },
    "stg": {
      "Title": "Staging Environment",
      "Name": "staging",
      "Description": "Deployment, performance, volume testing. Staging is used both as a specific environment and as a category of environments.",
      "Category": "stg",
      "MultiAZ": true,
      "Operations": {
        "Expiration": 90,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 7
        },
        "DeadLetterQueue": {
          "MaxReceives": 13
        }
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    },
    "prod": {
      "Title": "Production Environment",
      "Name": "production",
      "Description": "Kind of obvious...",
      "Category": "prod",
      "MultiAZ": true,
      "RDS": {
        "AutoMinorVersionUpgrade": false
      },
      "Operations": {
        "Expiration": 365,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 7
        },
        "DeadLetterQueue": {
          "MaxReceives": 13
        }
      },
      "DomainBehaviours": {
        "Segment": "naked"
      }
    },
    "trn": {
      "Title": "Training Environment",
      "Name": "training",
      "Description": "",
      "Category": "prod",
      "Operations": {
        "Expiration": 90,
        "FlowLogs": {
          "Enabled": true,
          "Expiration": 7
        }
      },
      "DomainBehaviours": {
        "Segment": "segmentInHost"
      }
    }
  },
  "Categories": {
    "alm": {
      "Title": "Application Lifecycle Management Environments"
    },
    "account": {
      "Title": "Account Resources"
    },
    "dev": {
      "Title": "Development Environments",
      "Name": "development"
    },
    "test": {
      "Title": "Testing Environments",
      "Name": "testing"
    },
    "stg": {
      "Title": "Staging Environments",
      "Name": "staging"
    },
    "prod": {
      "Title": "Production Environments",
      "Name": "production"
    }
  },
  "Tiers": {
    "web": {
      "Title": "Web Tier",
      "Description": "Supports HMI",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Instance" : "",
          "Version" : ""
        },
        "RouteTable" : "internal",
        "NetworkACL" : "open"
      }
    },
    "api": {
      "Title": "API Tier",
      "Description": "Supports externally exposed APIs",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Instance" : "",
          "Version" : ""
        },
        "RouteTable" : "internal",
        "NetworkACL" : "open"
      }
    },
    "msg": {
      "Title": "Messaging Tier",
      "Name": "messaging",
      "Description": "Supports system-to-system based interactions/services",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Instance" : "",
          "Version" : ""
        },
        "RouteTable" : "internal",
        "NetworkACL" : "open"
      }
    },
    "app": {
      "Title": "Applications Tier",
      "Name": "application",
      "Description": "Supports application logic execution",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Instance" : "",
          "Version" : ""
        },
        "RouteTable" : "internal",
        "NetworkACL" : "open"
      }
    },
    "db": {
      "Title": "Database Tier",
      "Name": "database",
      "Description": "Supports long term storage of content and customer data",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Instance" : "",
          "Version" : ""
        },
        "RouteTable" : "internal",
        "NetworkACL" : "open"
      }
    },
    "dir": {
      "Title": "Directories Tier",
      "Name": "directories",
      "Description": "Supports directories or domain controllers",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Instance" : "",
          "Version" : ""
        },
        "RouteTable" : "internal",
        "NetworkACL" : "open"
      }
    },
    "ana": {
      "Title": "Analytics Tier",
      "Name": "analytics",
      "Description": "Suports things like search engines",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Instance" : "",
          "Version" : ""
        },
        "RouteTable" : "internal",
        "NetworkACL" : "open"
      }
    },
    "elb": {
      "Title": "External Load Balancer Tier",
      "Description": "Publically accessible application load balancers",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Instance" : "",
          "Version" : ""
        },
        "RouteTable": "external",
        "NetworkACL" : "open"
      }
    },
    "ilb": {
      "Title": "Internal Load Balancer Tier",
      "Description": "Internally accessible application load balancers",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Instance" : "",
          "Version" : ""
        },
        "RouteTable" : "internal",
        "NetworkACL" : "open"
      }
    },
    "mgmt": {
      "Title": "Management Tier",
      "Name": "management",
      "Description": "Supports ssh based host access and internet access for internal hosts",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Instance" : "",
          "Version" : ""
        },
        "RouteTable": "external",
        "NetworkACL" : "open"
      },
      "Components": {
        "seg-cert": {
          "DeploymentUnits": [
            "cert"
          ]
        },
        "seg-cmk": {
          "DeploymentUnits": [
            "cmk"
          ]
        },
        "seg-dns": {
          "DeploymentUnits": [
            "dns"
          ],
          "Enabled" : false
        },
        "seg-dashboard": {
          "DeploymentUnits": [
            "dashboard"
          ],
          "Enabled" : false
        },
        "baseline" :{
          "DeploymentUnits" : [ "baseline" ],
          "baseline" : {
            "DataBuckets" : {
              "opsdata" : {
                "Role" : "operations",
                "Lifecycles" : {
                  "awslogs" : {
                    "Prefix" : "AWSLogs",
                    "Expiration" : "_operations",
                    "Offline" : "_operations"
                  },
                  "cloudfront" : {
                    "Prefix" : "CLOUDFRONTLogs",
                    "Expiration" : "_operations",
                    "Offline" : "_operations"
                  },
                  "docker" : {
                    "Prefix" : "DOCKERLogs",
                    "Expiration" : "_operations",
                    "Offline" : "_operations"
                  }
                }
              },
              "appdata" : {
                "Role" : "appdata",
                "Lifecycles" : {
                  "global" : {
                    "Expiration" : "_data",
                    "Offline" : "_data"
                  }
                }
              }
            }
          }
        },
        "ssh": {
          "DeploymentUnits": [ "ssh" ],
          "MultiAZ": true,
          "bastion": {
            "AutoScaling": {
              "DetailedMetrics": false,
              "ActivityCooldown": 180,
              "MinUpdateInstances": 0,
              "AlwaysReplaceOnUpdate": false
            }
          }
        },
        "vpc": {
          "DeploymentUnits": [ "vpc" ],
          "MultiAZ": true,
          "network" : {
            "RouteTables" : {
                "internal" : {
                },
                "external" : {
                    "Public" : true
                }
            },
            "NetworkACLs" : {
                "open" : {
                    "Rules" : {
                        "in" : {
                            "Priority" : 200,
                            "Action" : "allow",
                            "Source" : {
                                "IPAddressGroups" : [ "_global"]
                            },
                            "Destination" : {
                                "IPAddressGroups" : ["_localnet"],
                                "Port" : "any"
                            },
                            "ReturnTraffic" : false
                        },
                        "out" : {
                            "Priority" : 200,
                            "Action" : "allow",
                            "Source" : {
                                "IPAddressGroups" : [ "_localnet"]
                            },
                            "Destination" : {
                                "IPAddressGroups" : ["_global"],
                                "Port" : "any"
                            },
                            "ReturnTraffic" : false
                        }
                    }
                }
            }
          }
        },
        "igw" : {
          "DeploymentUnits": [ "igw" ],
          "gateway" : {
              "Engine" : "igw",
              "Destinations" : {
                  "default" : {
                      "IPAddressGroups" : "_global",
                      "Links" : {
                          "external" : {
                              "Tier" : "mgmt",
                              "Component" : "vpc",
                              "Version" : "",
                              "Instance" : "",
                              "RouteTable" : "external"
                          }
                      }
                  }
              }
          }
        },
        "nat" : {
          "DeploymentUnits" : [ "nat"],
          "gateway" : {
              "Engine" : "natgw",
              "Destinations" : {
                  "default" : {
                      "IPAddressGroups" : "_global",
                      "Links" : {
                          "internal" : {
                              "Tier" : "mgmt",
                              "Component" : "vpc",
                              "Version" : "",
                              "Instance" : "",
                              "RouteTable" : "internal"
                          }
                      }
                  }
              }
          }
        },
        "vpcendpoint" : {
            "DeploymentUnits" : ["vpcendpoint"],
            "gateway" : {
                "Engine" : "vpcendpoint",
                "Destinations" : {
                    "default" : {
                        "NetworkEndpointGroups" : [ "storage", "logs" ],
                        "Links" : {
                            "internal" : {
                                "Tier" : "mgmt",
                                "Component" : "vpc",
                                "Version" : "",
                                "Instance" : "",
                                "RouteTable" : "internal"
                            },
                            "external" : {
                                "Tier" : "mgmt",
                                "Component" : "vpc",
                                "Version" : "",
                                "Instance" : "",
                                "RouteTable" : "external"
                            }
                        }
                    }
                }
            }
        }
      }
    },
    "shared": {
      "Title": "Shared Tier",
      "Description": "Shared Tier",
      "Network": {
        "Enabled": true,
        "Link" : {
          "Tier" : "mgmt",
          "Component" : "vpc",
          "Version" : "",
          "Instance" : ""
        },
        "RouteTable": "external",
        "NetworkACL" : "open"
      }
    },
    "docs": {
      "Title": "Docs Tier",
      "Description": "Non-network Tier For documentation generation",
      "Name": "documentation",
      "Network" : {
        "Enabled" : false
      }
    },
    "gbl": {
      "Title": "Global Tier",
      "Description": "Components which are used for Global Services",
      "Name": "global",
      "Network": {
        "Enabled": false
      },
      "Components": {
        "cfredirect": {
          "Lambda": {
            "Instances": {
              "default": {
                "Versions": {
                  "v1": {
                    "DeploymentUnits": [ "cfredirect-v1" ],
                    "Enabled" : false,
                    "Fragment": "_cfredirect-v1"
                  }
                }
              }
            },
            "DeploymentType": "EDGE",
            "RunTime": "nodejs6.10",
            "MemorySize": 128,
            "Timeout": 1,
            "FixedCodeVersion": {},
            "Functions": {
              "cfredirect": {
                "Handler": "index.handler",
                "VPCAccess": false,
                "Permissions": {
                  "Decrypt": false,
                  "AsFile": false,
                  "AppData": false,
                  "AppPublic": false
                },
                "PredefineLogGroup": false
              }
            }
          }
        }
      }
    }
  },
  "Storage": {
    "default": {
      "EC2": {
        "Volumes": {
          "codeontap": {
            "Device": "/dev/sdp",
            "Size": "30"
          }
        }
      },
      "ECS": {},
      "ElasticSearch": {},
      "ComputeCluster": {},
      "bastion": {}
    }
  },
  "Processors": {
    "default": {
      "NAT": {
        "Processor": "t2.micro"
      },
      "bastion": {
        "Processor": "t2.micro"
      },
      "EC2": {
        "Processor": "t2.micro"
      },
      "EMR": {
        "Processor": "m4.large",
        "DesiredCorePerZone": 1,
        "DesiredTaskPerZone": 1
      },
      "ComputeCluster": {
        "Processor": "t2.micro",
        "MinPerZone": 1,
        "MaxPerZone": 1,
        "DesiredPerZone": 1
      },
      "ECS": {
        "Processor": "t2.medium",
        "MinPerZone": 1,
        "MaxPerZone": 1,
        "DesiredPerZone": 1
      },
      "ElastiCache": {
        "Processor": "cache.t2.micro",
        "CountPerZone": 1
      },
      "RDS": {
        "Processor": "db.t2.small"
      },
      "ElasticSearch": {
        "Processor": "m3.medium.elasticsearch",
        "CountPerZone": 1
      }
    }
  },
  "Product": {
    "cfredirect-v1": {
      "Region": "us-east-1"
    },
    "Builds": {
      "Data": {
        "Environment": "int"
      },
      "Code": {
        "Environment": "int"
      }
    }
  },
  "Ports": {
    "couchdb": {
      "Port": 5984,
      "Protocol": "HTTP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "ednp": {
      "Port": 25672,
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "elasticsearch": {
      "Port": 9200,
      "Protocol": "HTTP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "epmd": {
      "Port": 4369,
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "http": {
      "Port": 80,
      "Protocol": "HTTP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "httpalt": {
      "Port": 8080,
      "Protocol": "HTTP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "httpredirect": {
      "Port": 80,
      "Protocol": "HTTP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "2",
        "UnhealthyThreshold": "3",
        "Interval": "30",
        "Timeout": "5",
        "SuccessCodes": "301"
      }
    },
    "https": {
      "Port": 443,
      "Protocol": "HTTPS",
      "IPProtocol": "tcp",
      "Certificate": true,
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "kibana": {
      "Port": 5601,
      "Protocol": "HTTP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "memcached": {
      "Port": 11211,
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "meteor": {
      "Port": 3000,
      "Protocol": "HTTP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "mongodb": {
      "Port": 27017,
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "mysql": {
      "Port": 3306,
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "node": {
      "Port": 9000,
      "Protocol": "HTTP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "play": {
      "Port": 9000,
      "Protocol": "HTTP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "playws": {
      "Port": 9000,
      "Protocol": "TCP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Protocol": "HTTP",
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "postgresql": {
      "Port": 5432,
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "rabbit": {
      "Port": 5672,
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "rabbit-ui": {
      "Port": 15672,
      "Protocol": "HTTP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "2",
        "UnhealthyThreshold": "3",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "redis": {
      "Port": 6379,
      "Protocol": "TCP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "smtp": {
      "Port": 25,
      "Protocol": "TCP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "hsmtp": {
      "Port": 2025,
      "Protocol": "TCP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "ssh": {
      "Port": 22,
      "Protocol": "TCP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "ws": {
      "Port": 80,
      "Protocol": "TCP",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "wss": {
      "Port": 443,
      "Protocol": "SSL",
      "IPProtocol": "tcp",
      "HealthCheck": {
        "Path": "/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "5",
        "Interval": "30",
        "Timeout": "5"
      }
    },
    "ephemeraltcp" : {
      "PortRange" : {
        "From" : 1024,
        "To" : 65535
      },
      "IPProtocol" : "tcp"
    },
    "ephemeraludp" : {
      "PortRange" : {
        "From" : 1024,
        "To" : 65535
      },
      "IPProtocol" : "udp"
    },
    "any" : {
      "PortRange" : {
        "From" : 0,
        "To" : 65535
      },
      "IPProtocol" : "all"
    },
    "anyudp" : {
      "PortRange" : {
        "From" : 0,
        "To" : 65535
      },
      "IPProtocol" : "udp"
    },
    "anytcp" : {
      "PortRange" : {
        "From" : 0,
        "To" : 65535
      },
      "IPProtocol" : "tcp"
    },
    "anyicmp" : {
      "IPProtocol" : "icmp",
      "ICMP" : {
        "Code" : -1,
        "Type" : -1
      }
    }
  },
  "PortMappings": {
    "couchdb": {
      "Source": "https",
      "Destination": "couchdb"
    },
    "elasticsearch": {
      "Source": "https",
      "Destination": "elasticsearch"
    },
    "http": {
      "Source": "http",
      "Destination": "http"
    },
    "httpalt": {
      "Source": "http",
      "Destination": "httpalt"
    },
    "httpredirect": {
      "Source": "http",
      "Destination": "httpredirect"
    },
    "https": {
      "Source": "https",
      "Destination": "http"
    },
    "httpsalt": {
      "Source": "https",
      "Destination": "httpalt"
    },
    "kibana": {
      "Source": "https",
      "Destination": "kibana"
    },
    "meteor": {
      "Source": "https",
      "Destination": "meteor"
    },
    "node": {
      "Source": "https",
      "Destination": "node"
    },
    "play": {
      "Source": "https",
      "Destination": "play"
    },
    "playwss": {
      "Source": "wss",
      "Destination": "playws"
    },
    "smtp": {
      "Source": "smtp",
      "Destination": "smtp"
    },
    "hsmtp": {
      "Source": "smtp",
      "Destination": "hsmtp"
    },
    "ws": {
      "Source": "ws",
      "Destination": "ws"
    },
    "wss": {
      "Source": "wss",
      "Destination": "ws"
    }
  },
  "Segment": {
    "Network": {
      "InternetAccess": true,
      "Tiers": {
        "Order": [
          "web",
          "msg",
          "app",
          "db",
          "dir",
          "ana",
          "api",
          "spare",
          "elb",
          "ilb",
          "spare",
          "spare",
          "spare",
          "spare",
          "spare",
          "mgmt"
        ]
      },
      "Zones": {
        "Order": [
          "a",
          "b",
          "spare",
          "spare"
        ]
      }
    },
    "NAT": {
      "Enabled": true,
      "MultiAZ": false,
      "Hosted": true
    },
    "Bastion": {
      "Enabled": true,
      "Active": false,
      "PerSegment": true,
      "IPAddressGroups": []
    },
    "ConsoleOnly": false,
    "S3": {
      "IncludeTenant": false
    },
    "SSHPerSegment": true,
    "RotateKey": true,
    "Tiers": {
      "Order": [
        "elb",
        "api",
        "web",
        "msg",
        "dir",
        "ilb",
        "app",
        "db",
        "ana",
        "mgmt",
        "docs",
        "gbl"
      ]
    }
  },
  "CertificateBehaviours": {
    "External": false,
    "Wildcard": true,
    "IncludeInHost": {
      "Product": false,
      "Segment": false,
      "Tier": false
    },
    "HostParts": [
      "Host",
      "Tier",
      "Component",
      "Instance",
      "Version",
      "Segment",
      "Environment",
      "Product"
    ],
    "Qualifiers": {
      "prod": {
        "IncludeInHost": {
          "Environment": false
        }
      }
    }
  },
  "LogFiles": {
    "/var/log/dmesg": {
      "FilePath": "/var/log/dmesg"
    },
    "/var/log/messages": {
      "FilePath": "/var/log/messages",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/secure": {
      "FilePath": "/var/log/secure",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/cron": {
      "FilePath": "/var/log/cron",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/cfn-init.log": {
      "FilePath": "/var/log/cfn-init.log",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/cfn-init-cmd.log": {
      "FilePath": "/var/log/cfn-init-cmd.log",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/cloud-init.log": {
      "FilePath": "/var/log/cloud-init.log",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/cloud-init-output.log": {
      "FilePath": "/var/log/cloud-init-output.log",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/audit/audit.log": {
      "FilePath": "/var/log/audit/audit.log",
      "MultiLinePattern": "^type"
    },
    "/var/log/amazon/ssm/amazon-ssm-agent.log": {
      "FilePath": "/var/log/amazon/ssm/amazon-ssm-agent.log",
      "MultiLinePattern": "^INFO"
    },
    "/var/log/aide/aide.log": {
      "FilePath": "/var/log/aide/aide.log",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/docker": {
      "FilePath": "/var/log/docker",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/ecs/ecs-init.log": {
      "FilePath": "/var/log/ecs/ecs-init.log",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/ecs/ecs-agent.log": {
      "FilePath": "/var/log/ecs/ecs-agent.log",
      "TimeFormat": "%b %d %H:%M:%S"
    },
    "/var/log/ecs/audit.log": {
      "FilePath": "/var/log/ecs/audit.log",
      "TimeFormat": "%b %d %H:%M:%S"
    }
  },
  "LogFileGroups": {
    "security": {
      "LogFiles": [
        "/var/log/secure",
        "/var/log/audit/audit.log",
        "/var/log/aide/aide.log"
      ]
    },
    "system": {
      "LogFiles": [
        "/var/log/dmesg",
        "/var/log/messages",
        "/var/log/cron"
      ]
    },
    "docker": {
      "LogFiles": [
        "/var/log/docker"
      ]
    },
    "aws-ecs": {
      "LogFiles": [
        "/var/log/ecs/ecs-init.log",
        "/var/log/ecs/ecs-agent.log",
        "/var/log/ecs/audit.log"
      ]
    },
    "aws-system": {
      "LogFiles": [
        "/var/log/cfn-init.log",
        "/var/log/cfn-init-cmd.log",
        "/var/log/cloud-init.log",
        "/var/log/cloud-init-output.log",
        "/var/log/amazon/ssm/amazon-ssm-agent.log"
      ]
    }
  },
  "LogFileProfiles": {
    "default": {
      "EC2": {
        "LogFileGroups": [
          "system",
          "aws-system",
          "security",
          "docker"
        ]
      },
      "ComputeCluster": {
        "LogFileGroups": [
          "system",
          "aws-system",
          "security",
          "docker"
        ]
      },
      "ECS": {
        "LogFileGroups": [
          "system",
          "aws-system",
          "security",
          "docker",
          "aws-ecs"
        ]
      },
      "bastion": {
        "LogFileGroups": [
          "system",
          "aws-system",
          "security"
        ]
      }
    }
  },
  "CORSProfiles": {
    "S3Read": {
      "AllowedOrigins": [
        "*"
      ],
      "AllowedMethods": [
        "GET",
        "HEAD"
      ],
      "AllowedHeaders": [
        "*"
      ],
      "ExposedHeaders": [
        "ETag"
      ],
      "MaxAge": 1800
    },
    "S3Write": {
      "AllowedOrigins": [
        "*"
      ],
      "AllowedMethods": [
        "PUT",
        "POST"
      ],
      "AllowedHeaders": [
        "Content-Length",
        "Content-Type",
        "Content-MD5",
        "Authorization",
        "Expect",
        "x-amz-content-sha256",
        "x-amz-security-token"
      ],
      "ExposedHeaders": [
        "ETag"
      ],
      "MaxAge": 1800
    },
    "S3Delete": {
      "AllowedOrigins": [
        "*"
      ],
      "AllowedMethods": [
        "DELETE"
      ],
      "AllowedHeaders": [
        "Content-Length",
        "Content-Type",
        "Content-MD5",
        "Authorization",
        "Expect",
        "x-amz-content-sha256",
        "x-amz-security-token"
      ],
      "ExposedHeaders": [
        "ETag"
      ],
      "MaxAge": 1800
    }
  },
  "ScriptStores": {
    "_startup": {
      "Engine": "local",
      "Source": {
        "Directory": "$\\{GENERATION_STARTUP_DIR}/bootstrap"
      },
      "Destination": {
        "Prefix": "bootstrap"
      }
    }
  },
  "Bootstraps": {},
  "BootstrapProfiles": {
    "default": {
      "EC2": {
        "BootStraps": []
      },
      "ECS": {
        "BootStraps": []
      },
      "ComputeCluster": {
        "BootStraps": []
      },
      "bastion": {
        "BootStraps": []
      }
    }
  },
  "WAFValueSets" : {
    "default" : {
      "badcookies" : ["bad-cookie"],
      "badtokens" : ["bad-tokens"],
      "loginpaths" : ["/login"],
      "traversalpaths" : ["../","://"],
      "adminpaths" : ["/admin"],
      "adminips" : ["0.0.0.0/0"],
      "phpquery" : [
        "_SERVER[",
        "_ENV[",
        "auto_prepend_file=",
        "auto_append_file=",
        "allow_url_include=",
        "disable_functions=",
        "open_basedir=",
        "safe_mode="
      ],
      "phpuri" : ["php", "/"],
      "maxuri" : 1024,
      "maxquery" : 1024,
      "maxbody" : 4096,
      "maxcookie" : 4093,
      "csrfsize" : 36,
      "uristartswith" : [
        "/includes"
      ],
      "uriendswith" : [
        ".cfg",
        ".conf",
        ".config",
        ".ini",
        ".log",
        ".bak",
        ".backup"
      ],
      "blacklistedips" : [],
      "whitelistedips" : [],
      "sqlheaders" : [
        {"Type" : "HEADER", "Data" : "cookie"},
        {"Type" : "HEADER", "Data" : "authorization"}
      ],
      "badcookieheaders" : [
        {"Type" : "HEADER", "Data" : "cookie"}
      ],
      "badtokenheaders" : [
        {"Type" : "HEADER", "Data" : "authorization"}
      ],
      "xssheaders" : [
        {"Type" : "HEADER", "Data" : "cookie"}
      ],
      "csrfheaders" : [
        "x-csrf-token"
      ]
    }
  },
  "WAFConditions" : {
    "OWASP2017A1" : {
      "Type" : "SqlInjectionMatch",
      "Filters" : [
        {
          "FieldsToMatch" : [
            {"Type": "URI"},
            {"Type" : "QUERY_STRING"},
            {"Type": "BODY"},
            "sqlheaders"
          ],
          "Transformations" : ["URL_DECODE", "HTML_ENTITY_DECODE"]
        }
      ]
    },
    "OWASP2017A2-1" : {
      "Type" : "ByteMatch",
      "Description" : "Bad cookies",
      "Filters" : [
        {
          "FieldsToMatch" : {"Type": "HEADER", "Data" : "cookie"},
          "Constraints" : "CONTAINS",
          "Targets" : ["badcookies"],
          "Transformations" : ["URL_DECODE", "HTML_ENTITY_DECODE"]
        }
      ]
    },
    "OWASP2017A2-2" : {
      "Type" : "ByteMatch",
      "Description" : "Bad tokens",
      "Filters" : [
        {
          "FieldsToMatch" : {"Type": "HEADER", "Data" : "authorisation"},
          "Constraints" : "ENDS_WITH",
          "Targets" : ["badtokens"],
          "Transformations" : ["URL_DECODE", "HTML_ENTITY_DECODE"]
        }
      ]
    },
    "OWASP2017A2-3" : {
      "Type" : "ByteMatch",
      "Description" : "Login rate limiting",
      "Filters" : [
        {
          "FieldsToMatch" : {"Type": "URI"},
          "Constraints" : "STARTS_WITH",
          "Targets" : ["loginpaths"],
          "Transformations" : ["URL_DECODE", "HTML_ENTITY_DECODE"]
        }
      ]
    },
    "OWASP2017A3" : {
      "Type" : "XssMatch",
      "Filters" : [
        {
          "FieldsToMatch" : [
            {"Type": "URI"},
            {"Type" : "QUERY_STRING"},
            {"Type": "BODY"},
            "xssheaders"
          ],
          "Transformations" : ["URL_DECODE", "HTML_ENTITY_DECODE"]
        }
      ]
    },
    "OWASP2017A4-1" : {
      "Type" : "ByteMatch",
      "Description" : "Path traversal",
      "Filters" : [
        {
          "FieldsToMatch" : [
              {"Type": "URI"},
              {"Type": "QUERY_STRING"}
          ],
          "Constraints" : "CONTAINS",
          "Targets" : ["traversalpaths"],
          "Transformations" : ["URL_DECODE", "HTML_ENTITY_DECODE"]
        }
      ]
    },
    "OWASP2017A4-2" : {
      "Type" : "ByteMatch",
      "Description" : "Admin Functions",
      "Filters" : [
        {
          "FieldsToMatch" : {"Type": "URI"},
          "Constraints" : "STARTS_WITH",
          "Targets" : ["adminpaths"],
          "Transformations" : "URL_DECODE"
        }
      ]
    },
    "OWASP2017A4-3" : {
      "Type" : "IPMatch",
      "Description" : "Admin Functions",
      "Filters" : [
        {
          "Targets" : ["adminips"]
        }
      ]
    },
    "OWASP2017A5-PHP" : {
      "Type" : "ByteMatch",
      "Description" : "Insecure PHP Configuration",
      "Filters" : [
        {
          "FieldsToMatch" : {"Type": "QUERY_STRING"},
          "Constraints" : "CONTAINS",
          "Targets" : ["phpquery"],
          "Transformations" : "URL_DECODE"
        },
        {
          "FieldsToMatch" : {"Type": "URI"},
          "Constraints" : "ENDS_WITH",
          "Targets" : ["phpuri"],
          "Transformations" : "URL_DECODE"
        }
      ]
    },
    "OWASP2017A7" : {
      "Type" : "SizeConstraint",
      "Description" : "Basic size limits",
      "Filters" : [
        {
          "FieldsToMatch" : {"Type": "URI"},
          "Sizes" : ["maxuri"],
          "Operators" : ["GT"],
          "Transformations" : "NONE"
        },
        {
          "FieldsToMatch" : {"Type": "QUERY_STRING"},
          "Sizes" : ["maxquery"],
          "Operators" : ["GT"],
          "Transformations" : "NONE"
        },
        {
          "FieldsToMatch" : {"Type": "BODY"},
          "Sizes" : ["maxbody"],
          "Operators" : ["GT"],
          "Transformations" : "NONE"
        },
        {
          "FieldsToMatch" : {"Type" : "HEADER", "Data" : "cookie"},
          "Sizes" : ["maxcookie"],
          "Operators" : ["GT"],
          "Transformations" : "NONE"
        }
      ]
    },
    "OWASP2017A8-1" : {
      "Type" : "ByteMatch",
      "Description" : "CSRF Method",
      "Filters" : [
        {
          "FieldsToMatch" : {"Type": "METHOD"},
          "Constraints" : "EXACTLY",
          "Targets" : ["post"],
          "Transformations" : "LOWERCASE"
        }
      ]
    },
    "OWASP2017A8-2" : {
      "Type" : "SizeConstraint",
      "Description" : "CSRF Size",
      "Filters" : [
        {
          "FieldsToMatch" : ["csrfheaders"],
          "Sizes" : ["csrfsize"],
          "Operators" : ["EQ"],
          "Transformations" : "NONE"
        }
      ]
    },
    "OWASP2017A9" : {
      "Type" : "ByteMatch",
      "Description" : "Known vulnerabilities",
      "Filters" : [
        {
          "FieldsToMatch" : {"Type": "URI"},
          "Constraints" : "STARTS_WITH",
          "Targets" : ["uristartswith"],
          "Transformations" : "LOWERCASE"
        },
        {
          "FieldsToMatch" : {"Type": "URI"},
          "Constraints" : "ENDS_WITH",
          "Targets" : ["uriendswith"],
          "Transformations" : "LOWERCASE"
        }
      ]
    },
    "blacklist" : {
      "Type" : "IPMatch",
      "Description" : "Blacklist",
      "Filters" : [
        {
          "Targets" : ["blacklistedips"]
        }
      ]
    },
    "whitelist" : {
      "Type" : "IPMatch",
      "Description" : "Whitelist",
      "Filters" : [
        {
          "Targets" : ["whitelistedips"]
        }
      ]
    }
},
  "WAFRules" : {
    "OWASP2017A1" : {
      "Description" : "SQL Injection protections",
      "NameSuffix" : "owasp-sql",
      "Conditions" : [
        {
          "Condition" : "OWASP2017A1",
          "Negated" : false
        }
      ]
    },
    "OWASP2017A2" : {
      "Description" : "Broken Tokens",
      "NameSuffix" : "owasp-tokens",
      "Conditions" : [
        {
          "Condition" : "OWASP2017A2-1",
          "Negated" : false
        },
        {
          "Condition" : "OWASP2017A2-2",
          "Negated" : false
        }
      ]
    },
    "OWASP2017A3" : {
      "Description" : "Cross Site Scripting protections",
      "NameSuffix" : "owasp-xss",
      "Conditions" : [
        {
          "Condition" : "OWASP2017A3",
          "Negated" : false
        }
      ]
    },
    "OWASP2017A4-1" : {
      "Description" : "Path Traversal",
      "NameSuffix" : "owasp-paths",
      "Conditions" : [
        {
          "Condition" : "OWASP2017A4-1",
          "Negated" : false
        }
      ]
    },
    "OWASP2017A4-2" : {
      "Description" : "Admin path protections",
      "NameSuffix" : "owasp-admin-paths",
      "Conditions" : [
        {
          "Condition" : "OWASP2017A4-2",
          "Negated" : false
        },
        {
          "Condition" : "OWASP2017A4-3",
          "Negated" : true
        }
      ]
    },
    "OWASP2017A5-PHP" : {
      "Description" : "PHP Specific protections",
      "NameSuffix" : "owasp-php",
      "Conditions" : [
        {
          "Condition" : "OWASP2017A5-PHP",
          "Negated" : false
        }
      ]
    },
    "OWASP2017A7" : {
      "Description" : "Size Constraints",
      "NameSuffix" : "owasp-size",
      "Conditions" : [
        {
          "Condition" : "OWASP2017A7",
          "Negated" : false
        }
      ]
    },
    "OWASP2017A8" : {
      "Description" : "CSRF Detection",
      "NameSuffix" : "owasp-csrf",
      "Conditions" : [
        {
          "Condition" : "OWASP2017A8-1",
          "Negated" : false
        },
        {
          "Condition" : "OWASP2017A8-2",
          "Negated" : true
        }
      ]
    },
    "OWASP2017A9" : {
      "Description" : "Known Vulnerabilities",
      "NameSuffix" : "owasp-vulnerabilities",
      "Conditions" : [
        {
          "Condition" : "OWASP2017A9",
          "Negated" : false
        }
      ]
    },
    "blacklist" : {
      "Description" : "Blacklist",
      "NameSuffix" : "blacklist",
      "Conditions" : [
        {
          "Condition" : "blacklist",
          "Negated" : false
        }
      ]
    },
    "whitelist" : {
      "Description" : "Whitelist",
      "NameSuffix" : "whitelist",
      "Conditions" : [
        {
          "Condition" : "whitelist",
          "Negated" : false
        }
      ]
    }
  },
  "WAFRuleGroups" : {
    "OWASP2017-Basic" : {
      "WAFRules" : [
        "OWASP2017A1",
        "OWASP2017A3",
        "OWASP2017A7",
        "OWASP2017A9"
      ]
    }
  },
  "WAFProfiles" : {
    "OWASP2017" : {
      "Rules" : [
        {
          "RuleGroup" : "OWASP2017-Basic",
          "Action" : "BLOCK"
        }
      ],
      "DefaultAction" : "ALLOW"
    },
    "whitelist" : {
      "Rules" : [
        {
          "Rule" : "whitelist",
          "Action" : "ALLOW"
        }
      ],
      "DefaultAction" : "BLOCK"
    }
  },
  "SecurityProfiles": {
    "default": {
      "lb": {
        "application": {
          "HTTPSProfile": "ELBSecurityPolicy-TLS-1-2-2017-01",
          "WAFProfile" : "OWASP2017",
          "WAFValueSet" : "default"
        },
        "classic": {
          "HTTPSProfile": "ELBSecurityPolicy-2016-08"
        }
      },
      "apigateway": {
        "HTTPSProfile": "TLSv1",
        "WAFProfile" : "OWASP2017",
        "WAFValueSet" : "default"
      },
      "spa": {
        "HTTPSProfile": "TLSv1",
        "WAFProfile" : "OWASP2017",
        "WAFValueSet" : "default"
      }
    }
  },
  "LogFilters": {
    "_all": {
      "Pattern": ""
    },
    "_pylog-critical": {
      "Pattern": "CRITICAL"
    },
    "_pylog-error": {
      "Pattern": "?CRITICAL ?ERROR"
    },
    "_pylog-warning": {
      "Pattern": "?CRITICAL ?ERROR ?WARNING"
    },
    "_pylog-info": {
      "Pattern": "?CRITICAL ?ERROR ?WARNING ?INFO"
    },
    "_pylog-debug": {
      "Pattern": "?CRITICAL ?ERROR ?WARNING ?INFO ?DEBUG"
    },
    "apache": {
      "Pattern": "[ip, id, user, timestamp, request, status_code=*, size]"
    },
    "_apache-4xx": {
      "Pattern": "[ip, id, user, timestamp, request, status_code=4*, size]"
    },
    "_apache-5xx": {
      "Pattern": "[ip, id, user, timestamp, request, status_code=5*, size]"
    },
    "_sns-success": {
      "Pattern": "{ $.status = \"SUCCESS\" }"
    },
    "_sns-failure": {
      "Pattern": "{ $.status = \"FAILURE\" }"
    }
  },
  "DeploymentProfiles": {
    "_frontdoor": {
      "Modes": {
        "maintenance": {
          "lb": {
            "PortMappings": {
              "httpsmaintenance": {
                "Mapping": "https",
                "Priority": 50,
                "Fixed": {
                  "Message": "This application is currently undergoing scheduled maintenance. Please try again later.",
                  "ContentType": "text/plain",
                  "StatusCode": "503"
                }
              }
            }
          }
        }
      }
    },
    "_hibernate": {
      "Modes": {
        "maintenance": {
          "ecs": {
            "Hibernate": {
              "Enabled": true
            }
          },
          "rds": {
            "Hibernate": {
              "Enabled": true
            }
          },
          "cache" : {
            "Hibernate" : {
              "Enabled" : true
            }
          }
        }
      }
    },
    "_moncpumem" : {
        "Modes" : {
          "*" : {
            "ecs" : {
              "Alerts" : {
                "HighHostMemoryUsage" : {
                    "Description" : "High Memory usage on ECS Host cluster",
                    "Name" : "HighHostMemoryUsage",
                    "Metric" : "MemoryUtilization",
                    "Threshold" : 95,
                    "Severity" : "Error",
                    "Statistic" : "Average",
                    "Periods" : 2,
                    "Resource" : {
                        "Type" : "ecs"
                    }
                },
                "HighHostCPUUsage" : {
                    "Description" : "High CPU usage on ECS Host cluster",
                    "Name" : "HighHostCPUUsage",
                    "Metric" : "CPUUtilization",
                    "Threshold" : 95,
                    "Severity" : "Error",
                    "Statistic" : "Average",
                    "Periods" : 2,
                    "Resource" : {
                        "Type" : "ecs"
                    }
                }
              }
            },
            "service" : {
              "Alerts" : {
                "HighCPUUsage" : {
                    "Description" : "Higher than expected CPU usage detected",
                    "Name" : "HighCPUUsage",
                    "Metric" : "CPUUtilization",
                    "Threshold" : 150,
                    "Severity" : "Warning",
                    "Statistic" : "Average"
                },
                "HighMemoryUsage" : {
                    "Description" : "Higher than expected memory usage detected",
                    "Name" : "HighMemoryUsage",
                    "Metric" : "MemoryUtilization",
                    "Threshold" : 120,
                    "Severity" : "Warning",
                    "Statistic" : "Average"
                }
              }
            },
            "rds" : {
              "Alerts" : {
                "HighCPUUsage" : {
                    "Description" : "Database under high CPU load",
                    "Name" : "HighCPUUsage",
                    "Metric" : "CPUUtilization",
                    "Threshold" : 90,
                    "Severity" : "Error",
                    "Statistic" : "Average",
                    "Periods" : 2
                },
                "LowDiskSpace" : {
                    "Description" : "Database disk space is getting low only 1Gb free",
                    "Name" : "LowDiskSpace",
                    "Metric" : "FreeStorageSpace",
                    "Threshold" : 1024000000,
                    "Severity" : "Error",
                    "Statistic" : "Maximum",
                    "Periods" : 1,
                    "Operator" : "LessThanOrEqualToThreshold"
                }
              }
            },
            "cache" : {
              "Alerts" : {
                "HighCPUUsage" : {
                    "Description" : "Redis cache under high CPU load",
                    "Name" : "HighCPUUsage",
                    "Metric" : "EngineCPUUtilization",
                    "Threshold" : 90,
                    "Severity" : "Error",
                    "Statistic" : "Average",
                    "Periods" : 2
                }
              }
            }
          }
        }
    }
  },
  "NetworkEndpointGroups" : {
    "compute" : {
        "Services" : [ "ec2", "ec2messages", "logs", "elasticloadbalancing", "monitoring" ]
    },
    "security" : {
        "Services" : [ "kms", "logs" ]
    },
    "configurationMgmt" : {
      "Services" : [ "ssm", "ssmmessages" ]
    },
    "ecs" : {
      "Services" : [ "ecs", "ecs-agent", "ecs-telemetry", "ecr.api", "ecr.dkr" ]
    },
    "serverless" : {
      "Services"  : [ "sns", "sqs", "execute-api" ]
    },
    "logs" : {
      "Services" : [ "logs"]
    },
    "storage" : {
      "Services" : [ "s3", "dynamodb" ]
    }
  }
}
